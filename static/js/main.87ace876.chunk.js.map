{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA4DeA,MA1Df,SAAkBC,GAAQ,IAAD,EACKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD9C,mBACdC,EADc,KACPC,EADO,KAGfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QActB,OACI,sBAAMW,UAAU,YAAYC,SAZX,SAAAH,GACjBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBC,KAAMjB,IAGVC,EAAS,KAIT,SACKL,EAAME,KACP,qCACA,uBAAOoB,KAAK,OACZC,YAAY,oBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,eAAlB,mBAIA,qCACA,uBAAOQ,KAAK,OACZC,YAAY,cACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,UAAlB,uB,eCTGa,MArCf,YAA+D,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EAClC9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAH+C,mBACnDD,EADmD,KAC7C8B,EAD6C,KAc1D,OAAG9B,EAAKe,GACG,cAAC,EAAD,CAAUf,KAAOA,EAAMa,SATb,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QAQRyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAClC,WADA,UAEI,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACKiB,EAAKb,MADAa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACAuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBACV,cAAC,IAAD,CACAuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,mBAVDqB,OCyBVG,MA9Cf,WAAqB,IAAD,EACWrC,mBAAS,IADpB,mBACR2B,EADQ,KACDW,EADC,KAqChB,OACI,gCACI,0DACA,cAAC,EAAD,CAAUxB,SArCD,SAAAmB,GACZ,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OA+BN,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAdN,SAAAZ,GACjB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAI1B,OAHGA,EAAKjB,KAAOA,IACfiB,EAAKE,YAAcF,EAAKE,YAEjBF,KAEVK,EAASG,IAO0CZ,WApBpC,SAAAb,GACf,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAOA,KAExDsB,EAASI,IAiBkEZ,WA5B5D,SAACc,EAAQC,GACrBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI3CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCV5DC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCHNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87ace876.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n            <>\r\n            <input type=\"text\"\r\n            placeholder=\"Update your items\"\r\n            value={input}\r\n            name='text'\r\n            className='todo-input edit'\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n            />\r\n            <button className='todo-bt edit'>OK</button>\r\n            </>\r\n            ) :\r\n            (\r\n            <>\r\n            <input type=\"text\"\r\n            placeholder=\"Add a To-Do\"\r\n            value={input}\r\n            name='text'\r\n            className='todo-input'\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n            />\r\n            <button className='todo-bt'>Add</button>\r\n            </>\r\n            )\r\n            }\r\n            \r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { IoIosCloseCircle } from 'react-icons/io';\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if(edit.id){\r\n        return <TodoForm edit ={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' :\r\n        'todo-row'} key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <IoIosCloseCircle \r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'/>\r\n                <FaEdit \r\n                onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n                className='edit-icon'/>\r\n            </div>\r\n\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default Todo;\r\n","import React,{useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n     const [todos, setTodos] = useState([]);\r\n\r\n     const addTodo = todo => {\r\n         if(!todo.text || /^\\s*$/.test(todo.text)){\r\n             return;\r\n         }\r\n\r\n         const newTodos = [todo, ...todos];\r\n\r\n         setTodos(newTodos);\r\n     };\r\n\r\n     const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return;\r\n        }\r\n        \r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n     };\r\n\r\n     const removeTodo = id => {\r\n         const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n         setTodos(removeArr);\r\n     };\r\n\r\n     const completeTodo = id => {\r\n         let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n            todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n         });\r\n         setTodos(updatedTodos);\r\n     };\r\n    \r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for List</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"ToDoList\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}